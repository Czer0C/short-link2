name: CI/CD with Docker Compose

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the 'main' branch
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3
      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      # Step 4: Verify Docker Compose Installation
      - name: Check Docker Compose version
        run: docker-compose --version
      # Step 0: setup .env
      - name: Create .env File
        run: |
          touch .env
          echo "POSTGRES_USER=admin" >> .env
          echo "POSTGRES_PASSWORD=admin123" >> .env
          echo "PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org" >> .env
          echo "PGADMIN_DEFAULT_PASSWORD=admin123" >> .env
          echo "PGADMIN_CONNECTION_URI=postgresql://admin:admin123@postgres:5432/postgres" >> .env
          echo "PGADMIN_PORT=8080" >> .env
          echo "SERVICE_PORT=5000" >> .env
          echo "POSTGRES_HOST=localhost" >> .env
          cat .env
      # Step 4: Verify Docker Compose Installation
      - name: CHECK FILES
        run: ls -a
      # Step 5: Build and run Docker Compose
      - name: Build and run Docker Compose
        run: docker-compose up --build -d

      # Step 6: Tear down Docker Compose
      - name: Tear down Docker Compose
        if: always()
        run: docker-compose down
